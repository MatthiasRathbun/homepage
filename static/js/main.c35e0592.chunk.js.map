{"version":3,"sources":["Particles.js","SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["Canvas","state","width","height","updateWindowDimensions","setState","window","innerWidth","innerHeight","this","addEventListener","removeEventListener","console","log","params","particles","number","value","density","enable","value_area","color","shape","type","stroke","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","enable_auto","distance","condensed_mode","rotateX","rotateY","move","direction","straight","out_mode","bounce","attract","interactivity","detect_on","events","onhover","onclick","resize","retina_detect","Component","Search","Input","SearchBar","placeholder","style","position","left","marginTop","enterButton","onSearch","open","styles","root","fontFamily","textAlign","background","display","zIndex","App","renderWelcomeMsg","currentTime","Date","currentHour","getHours","splitAfternoon","splitEvening","date","dayPortion","setInterval","className","Particles","toLocaleTimeString","navigator","language","hour","minute","toDateString","href","target","rel","clockUpdate","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c35e0592.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Particles from \"react-particles-js\";\r\n\r\nclass Canvas extends Component {\r\n    state = { width: \"0px\", height: \"0px\" };\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n    updateWindowDimensions = () => {\r\n        this.setState({\r\n            width: `${window.innerWidth}px`,\r\n            height: `${window.innerHeight}px`\r\n        });\r\n    };\r\n    render() {\r\n        const { width, height } = this.state;\r\n        console.log(width, height);\r\n        return (\r\n            <Particles\r\n                {...this.state}\r\n                params={{\r\n                    particles: {\r\n                        number: {\r\n                            value: 50,\r\n                            density: {\r\n                                enable: true,\r\n                                value_area: 800\r\n                            }\r\n                        },\r\n                        color: {\r\n                            value: \"#ffffff\"\r\n                        },\r\n                        shape: {\r\n                            type: \"circle\",\r\n                            stroke: {\r\n                                width: 0,\r\n                                color: \"#000000\"\r\n                            },\r\n                        },\r\n                        opacity: {\r\n                            value: 0.4,\r\n                            random: true,\r\n                            anim: {\r\n                                enable: true,\r\n                                speed: 1.5,\r\n                                opacity_min: 0.1,\r\n                                sync: false\r\n                            }\r\n                        },\r\n                        size: {\r\n                            value: 3,\r\n                            random: true,\r\n                            anim: {\r\n                                enable: true,\r\n                                speed: 2,\r\n                                size_min: 0.1,\r\n                                sync: false\r\n                            }\r\n                        },\r\n                        line_linked: {\r\n                            enable_auto: true,\r\n                            distance: 100,\r\n                            color: \"#fff\",\r\n                            opacity: 1,\r\n                            width: 1,\r\n                            condensed_mode: {\r\n                                enable: false,\r\n                                rotateX: 600,\r\n                                rotateY: 600\r\n                            }\r\n                        },\r\n                        move: {\r\n                            enable: true,\r\n                            speed: 1.6,\r\n                            direction: \"none\",\r\n                            random: false,\r\n                            straight: false,\r\n                            out_mode: \"out\",\r\n                            bounce: false,\r\n                            attract: {\r\n                                enable: false,\r\n                                rotateX: 600,\r\n                                rotateY: 1200\r\n                            }\r\n                        }\r\n                    },\r\n                    interactivity: {\r\n                        detect_on: \"canvas\",\r\n                        events: {\r\n                            onhover: {\r\n                                enable: true,\r\n                            },\r\n                            onclick: {\r\n                                enable: false\r\n                            },\r\n                            resize: true\r\n                        }\r\n                    },\r\n                    retina_detect: true\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Canvas;\r\n","import React, { Component } from \"react\";\r\nimport { Input } from \"antd\";\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\nexport default class SearchBar extends Component {\r\n  render() {\r\n    return (\r\n      <div >\r\n        <Search\r\n          placeholder=\"Google Search\"\r\n          style={{ position: \"absolute\", left: \"35%\", width: \"30%\", marginTop: \"2%\" }}\r\n          enterButton={true}\r\n          onSearch={value => {\r\n            window.open(`https://www.google.com/search?q=${value}`, \"_blank\");\r\n          }}\r\n        ></Search>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport './App.css';\r\nimport Particles from \"./Particles\";\r\nimport SearchBar from './SearchBar'\r\n\r\nconst styles = {\r\n  root: {\r\n    fontFamily: \"sans-serif\",\r\n    textAlign: \"center\",\r\n    background: \"#222\",\r\n    display: \"flex\",\r\n    zIndex: \"0\",\r\n    position: \"absolute\",\r\n    width: \"100vw\",\r\n    height: \"100vh\"\r\n  }\r\n};\r\n\r\nclass App extends Component {\r\n\r\n  renderWelcomeMsg = (currentTime = new Date()) => {\r\n    const currentHour = currentTime.getHours()\r\n    const splitAfternoon = 12; // 24hr time to split the afternoon\r\n    const splitEvening = 17; // 24hr time to split the evening\r\n\r\n    if (currentHour >= splitAfternoon && currentHour <= splitEvening) {\r\n      // Between 12 PM and 5PM\r\n      return 'afternoon';\r\n    } else if (currentHour >= splitEvening) {\r\n      // Between 5PM and Midnight\r\n      return 'evening';\r\n    }\r\n    // Between dawn and noon\r\n    return 'morning';\r\n  };\r\n\r\n  // state contains current date\r\n  state = {\r\n    date: new Date(),\r\n    dayPortion: this.renderWelcomeMsg()\r\n  };\r\n\r\n  clockUpdate() { // function to update the clock time.\r\n    setInterval(() => {\r\n      this.setState({ date: new Date(), dayPortion: this.renderWelcomeMsg() }) //updates async without updating entire DOM\r\n      // this command will run indefinitely, on a 1000ms (1s) frequency.\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    let date = this.state.date;\r\n    return (\r\n      <div className=\"App\" >\r\n        <div style={styles.root}>\r\n          <Particles />\r\n        </div>\r\n        <div className=\"welcomeHeader\">\r\n          <div className=\"welcomeTime\">Good {this.state.dayPortion}, Matthias.</div>\r\n          <div className=\"dateLabel\">{date.toLocaleTimeString(navigator.language, {\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n          })} - {date.toDateString()}</div>\r\n        </div>\r\n        <div className=\"linksParentContainer\">\r\n          <div className=\"work linkContainer\">\r\n            <div className=\"groupHeader workHeader\">\r\n              <div className=\"headerText orangeHeader\">\r\n                Work.\r\n                        </div>\r\n              <hr className=\"orangeLine\"></hr>\r\n            </div>\r\n            <ul className=\"links\">\r\n              <li><a href=\"https://keep.google.com/u/0/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Keep</a></li>\r\n              <li><a href=\"https://classroom.google.com/u/1/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Classroom</a></li>\r\n              <li><a href=\"https://www.mysdpbc.org/\" target=\"_blank\" rel=\"noopener noreferrer\">School Portal</a></li>\r\n              <li><a href=\"https://calendar.google.com/calendar/r\" target=\"_blank\" rel=\"noopener noreferrer\">Calendar</a></li>\r\n              <li><a href=\"https://my.ucf.edu/psp/IHPROD/EMPLOYEE/EMPL/h/?tab=DEFAULT&cmd=login\" target=\"_blank\" rel=\"noopener noreferrer\">UCF Portal</a></li>\r\n              <li><a href=\"http://www.outlook.com/knights.ucf.edu\" target=\"_blank\" rel=\"noopener noreferrer\">UCF Email</a></li>\r\n              \r\n            </ul>\r\n          </div>\r\n          <div className=\"collegeApps linkContainer\">\r\n            <div className=\"groupHeader collegeAppsHeader\">\r\n              <div className=\"headerText blueHeader\">\r\n                Games.\r\n                        </div>\r\n              <hr className=\"blueLine\"></hr>\r\n            </div>\r\n            <ul className=\"links\">\r\n            <li><a href=\"steam://rungameid/359550\" target=\"_blank\" rel=\"noopener noreferrer\">Rainbow Six</a></li>\r\n              <li><a href=\"steam://rungameid/252950\" target=\"_blank\" rel=\"noopener noreferrer\">Rocket League</a></li>\r\n              <li><a href=\"uplay://launch/4932/0\" target=\"_blank\" rel=\"noopener noreferrer\">Division 2</a></li>\r\n\r\n            </ul>\r\n          </div>\r\n          <div className=\"messaging linkContainer\">\r\n            <div className=\"groupHeader messagingHeader\">\r\n              <div className=\"headerText greenHeader\">\r\n                Messaging.\r\n                        </div>\r\n              <hr className=\"greenLine\"></hr>\r\n            </div>\r\n            <ul className=\"links\">\r\n              <li><a href=\"discord://\" target=\"_blank\" rel=\"noopener noreferrer\">Discord</a></li>\r\n              <li><a href=\"slack://\" target=\"_blank\" rel=\"noopener noreferrer\">ForensX Slack</a></li>\r\n              <li><a href=\"https://gmail.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gmail</a></li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"socialMedia linkContainer\">\r\n            <div className=\"groupHeader socialMediaHeader\">\r\n              <div className=\"headerText redHeader\">\r\n                Social and Games.\r\n                        </div>\r\n              <hr className=\"redLine\"></hr>\r\n            </div>\r\n            <ul className=\"links\">\r\n              <li><a href=\"https://www.reddit.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Reddit</a></li>\r\n              <li><a href=\"https://www.reddit.com/r/news/\" target=\"_blank\" rel=\"noopener noreferrer\">r/News</a></li>\r\n              <li><a href=\"https://medium.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Medium</a></li>\r\n              <li><a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a></li>\r\n\r\n            </ul>\r\n          </div>\r\n          <SearchBar></SearchBar>\r\n        </div>\r\n        {\r\n          this.clockUpdate()\r\n        }\r\n        \r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}